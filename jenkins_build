@Library('piper-library-os') _

node() {
  
  def check
  // def majorVersion="1.0.${BUILD_NUMBER}"
  def majorVersion="${BUILD_NUMBER}"
  currentBuild.displayName = majorVersion
  def GIT_COMMIT
  
  stage('prepare') {
      check=checkout scm
      echo "${check}"
      setupCommonPipelineEnvironment script:this
      checkChangeInDevelopment script: this,changeDocumentId:'8000004822'     
      GIT_COMMIT = check.GIT_COMMIT
      echo ">>>>>>>${GIT_COMMIT}"
       }

stage('build') {
      mtaBuild script: this
     // step([$class: 'UploadBuild',tenantId: "5ade13625558f2c6688d15ce",revision: "${check.GIT_COMMIT}",appName: "SAP_Build",requestor: "admin",id: "${BUILD_NUMBER}"])
}

 stage ('UCV Upload Build') {
      step([$class: 'UploadBuild',
      tenantId: "5ade13625558f2c6688d15ce",
      revision: "${GIT_COMMIT}",
      appName: "SAP_Build",
      requestor: "admin",
      id: "${majorVersion}"
    ])
  }
  stage('Kick off Dev Deployment') {
   	  //build job: 'Fonterra-demo/SAP_dev_deploy', wait: false, parameters: [string(name: 'previousBuildNumber', value: BUILD_NUMBER), string(name: 'previousBuildUrl', value: BUILD_URL)]
    
    //echo "${majorVersion}"
     //build job: 'Fonterra-demo/SAP_dev_deploy', wait: false, parameters: [
     //string(name: 'majorVersion', value: majorVersion),
     //string(name: 'previousBuildUrl', value: BUILD_URL)
    //]
    
    build job: 'Fonterra-demo/SAP_dev_deploy', wait: false, parameters: [
    string(name: 'previousBuildNumber', value: majorVersion), 
    string(name: 'previousBuildUrl', value: BUILD_URL),
    string(name: 'gitCommit', value: GIT_COMMIT)
    ]
    
    sleep 10
  } 
}
